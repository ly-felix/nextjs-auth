generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL") 
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String          @id @default(cuid())
  email             String?         @unique
  username          String?         @unique
  password          String?
  createdAt         DateTime        @default(now())
  emailVerified     DateTime?
  image             String?
  name              String?
  updatedAt         DateTime        @default(now()) @updatedAt
  active            Boolean         @default(false)
  lastActiveSession DateTime?
  loginCount        Int             @default(0)
  accounts          Account[]
  ActivateToken     ActivateToken[]
  sessions          Session[]
}

model ActivateToken {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  activedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
